name: CI

on:
  push:
    branches:
      - main
    paths:
      - "server/**"
  pull_request:
    branches:
      - main
    paths:
      - "server/**"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-server-${{ hashFiles('server/**/*.gradle*', 'server/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-server-

      - name: Verify MySQL is running
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
          until mysqladmin ping -h 127.0.0.1 -u test_user -ptest_password --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done
          echo "MySQL is up and running!"

      - name: Run tests
        working-directory: server
        run: ./gradlew test

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: test # deploy only if tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json" \
          https://api.render.com/v1/services/<service-id>/deploys